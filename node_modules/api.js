var Resource = require('deployd/lib/resource')
  , util = require('util')
  , Singly = require('singly/lib')
  , request = require('request');

function SinglyAPI(options) {
  Resource.apply(this, arguments);
  if (this.config.singlyClientId && this.config.singlyClientSecret) {
    this.singly = new Singly(
        this.config.singlyClientId
      , this.config.singlyClientSecret
      , 'http://localhost:2403/singly-api');
  }
}
util.inherits(SinglyAPI, Resource);
module.exports = SinglyAPI;

SinglyAPI.label = 'SinglyAPI';
SinglyAPI.defaultPath = '/singly-api';
SinglyAPI.basicDashboard = {
  settings: [{
      name: 'singlyClientId',
      type: 'string',
      description: "Get this from http://dev.singly.com"
  }, {
      name: 'singlyClientSecret',
      type: 'string',
      description: "Get this from http://dev.singly.com"
  }]
};


SinglyAPI.prototype.handle = function (ctx, next) {
  //if(ctx.req && ctx.req.method !== 'GET') return next();

	if (!this.singly) return ctx.done("Missing Singly configuration!");

  console.log(ctx.req.method + ' ________________________ ');

	var accessToken;

	//ctx.done(null, JSON.stringify(ctx.server.resources[0]));
	//console.log(ctx.session);

	//ctx.done(null, ctx);
	
	if(ctx.req && ctx.req.query && ctx.req.query.code) {
		console.log(ctx.req.query.code);
  	this.singly.getAccessToken(ctx.req.query.code, function(err, resp, auth) {

	  	ctx.req.session.access_token = auth.access_token;
      ctx.res.cookies.set( "access_token", auth.access_token );
	    ctx.done(null, auth.access_token);
  		//ctx.redirect("/#/");
      
  	});
	}
	else {
		ctx.redirect(this.singly.getAuthorizeURL('facebook'));
	}
	
}


